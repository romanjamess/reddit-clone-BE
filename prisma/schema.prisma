// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

// schema.prisma

// Define the User model
model User {
  id         String      @id @default(uuid())
  username   String      @unique
  password   String // You should hash and salt the password in your application
  posts      Post[]
  subreddits Subreddit[]
  upvotes    Upvote[]
  downvotes  Downvote[]
}

model Post {
  id          String     @id @default(uuid())
  title       String
  text        String?
  created     DateTime   @default(now())
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  subreddit   Subreddit  @relation(fields: [subredditId], references: [id], onDelete: Cascade)
  subredditId String
  children    Post[]     @relation("parentChild")
  parentId    String?
  parent      Post?      @relation("parentChild", fields: [parentId], references: [id], onDelete: Cascade)
  upvotes     Upvote[]
  downvotes   Downvote[]
}

model Subreddit {
  id      String   @id @default(uuid())
  name    String   @unique
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  posts   Post[]
  created DateTime @default(now())
  userId  String
}

model Upvote {
  id     String @id @default(uuid())
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([postId, userId])
}

model Downvote {
  id     String @id @default(uuid())
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([postId, userId])
}
